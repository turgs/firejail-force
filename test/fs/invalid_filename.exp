#!/usr/bin/expect -f
# This file is part of Firejail project
# Copyright (C) 2014-2017 Firejail Authors
# License GPL v2

set timeout 10
spawn $env(SHELL)
match_max 100000

send -- "firejail --debug-check-filename --noprofile --blacklist=\"bla&&bla\"\r"
expect {
	timeout {puts "TESTING ERROR 1.1\n";exit}
	"Checking filename bla&&bla"
}
expect {
	timeout {puts "TESTING ERROR 1.2\n";exit}
	"Error:"
}
expect {
	timeout {puts "TESTING ERROR 1.3\n";exit}
	"is an invalid filename"
}
after 100

send -- "firejail --debug-check-filename --noprofile --cgroup=\"bla&&bla\"\r"
expect {
	timeout {puts "TESTING ERROR 2.1\n";exit}
	"Checking filename bla&&bla"
}
expect {
	timeout {puts "TESTING ERROR 2.2\n";exit}
	"Error:"
}
expect {
	timeout {puts "TESTING ERROR 2.3\n";exit}
	"is an invalid filename"
}
after 100

send -- "firejail --debug-check-filename --noprofile --chroot=\"bla&&bla\"\r"
expect {
	timeout {puts "TESTING ERROR 3.1\n";exit}
	"Checking filename bla&&bla" {puts "normal system\n"}
	"Error: --chroot option is not available on Grsecurity systems" { puts "\nall done\n"; exit}
}
expect {
	timeout {puts "TESTING ERROR 3.2\n";exit}
	"Error:"
}
expect {
	timeout {puts "TESTING ERROR 3.3\n";exit}
	"is an invalid filename"
}
after 100

send -- "firejail --debug-check-filename --noprofile --netfilter=\"bla&&bla\"\r"
expect {
	timeout {puts "TESTING ERROR 4.1\n";exit}
	"Checking filename bla&&bla"
}
expect {
	timeout {puts "TESTING ERROR 4.2\n";exit}
	"Error:"
}
expect {
	timeout {puts "TESTING ERROR 4.3\n";exit}
	"is an invalid filename"
}
after 100

send -- "firejail --debug-check-filename --noprofile --output=\"bla&&bla\"\r"
expect {
	timeout {puts "TESTING ERROR 5.2\n";exit}
	"Error:"
}
expect {
	timeout {puts "TESTING ERROR 5.3\n";exit}
	"is an invalid filename"
}
after 100

send -- "firejail --debug-check-filename --noprofile --private=\"bla&&bla\"\r"
expect {
	timeout {puts "TESTING ERROR 6.1\n";exit}
	"Checking filename bla&&bla"
}
expect {
	timeout {puts "TESTING ERROR 6.2\n";exit}
	"Error:"
}
expect {
	timeout {puts "TESTING ERROR 6.3\n";exit}
	"is an invalid filename"
}
after 100

send -- "firejail --debug-check-filename --noprofile --private-bin=\"bla&&bla\"\r"
expect {
	timeout {puts "TESTING ERROR 7.1\n";exit}
	"Checking filename bla&&bla"
}
expect {
	timeout {puts "TESTING ERROR 7.2\n";exit}
	"Error:"
}
expect {
	timeout {puts "TESTING ERROR 7.3\n";exit}
	"is an invalid filename"
}
after 100

send -- "firejail --debug-check-filename --noprofile --private-home=\"bla&&bla\"\r"
expect {
	timeout {puts "TESTING ERROR 8.1\n";exit}
	"Checking filename bla&&bla"
}
expect {
	timeout {puts "TESTING ERROR 8.2\n";exit}
	"Error:"
}
expect {
	timeout {puts "TESTING ERROR 8.3\n";exit}
	"is an invalid filename"
}
after 100

send -- "firejail --debug-check-filename --noprofile --private-etc=\"bla&&bla\"\r"
expect {
	timeout {puts "TESTING ERROR 9.1\n";exit}
	"Checking filename bla&&bla"
}
expect {
	timeout {puts "TESTING ERROR 9.2\n";exit}
	"Error:"
}
expect {
	timeout {puts "TESTING ERROR 9.3\n";exit}
	"is an invalid filename"
}
after 100

send -- "firejail --debug-check-filename --profile=\"bla&&bla\"\r"
expect {
	timeout {puts "TESTING ERROR 10.1\n";exit}
	"Checking filename bla&&bla"
}
expect {
	timeout {puts "TESTING ERROR 10.2\n";exit}
	"Error:"
}
expect {
	timeout {puts "TESTING ERROR 10.3\n";exit}
	"is an invalid filename"
}
after 100

send -- "firejail --debug-check-filename --read-only=\"bla&&bla\"\r"
expect {
	timeout {puts "TESTING ERROR 11.1\n";exit}
	"Checking filename bla&&bla"
}
expect {
	timeout {puts "TESTING ERROR 11.2\n";exit}
	"Error:"
}
expect {
	timeout {puts "TESTING ERROR 11.3\n";exit}
	"is an invalid filename"
}
after 100

send -- "firejail --debug-check-filename --shell=\"bla&&bla\"\r"
expect {
	timeout {puts "TESTING ERROR 12.1\n";exit}
	"Checking filename bla&&bla"
}
expect {
	timeout {puts "TESTING ERROR 12.2\n";exit}
	"Error:"
}
expect {
	timeout {puts "TESTING ERROR 12.3\n";exit}
	"is an invalid filename"
}
after 100


send -- "firejail --debug-check-filename --whitelist=\"bla&&bla\"\r"
expect {
	timeout {puts "TESTING ERROR 14.1\n";exit}
	"Checking filename bla&&bla"
}
expect {
	timeout {puts "TESTING ERROR 14.2\n";exit}
	"Error:"
}
expect {
	timeout {puts "TESTING ERROR 14.3\n";exit}
	"is an invalid filename"
}
after 100

puts "\nall done\n"
